# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH=/home/jamcshan/.local/bin:/home/jamcshan/iu/embedded-systems/ES-SPRING-2022/embsys_sp22/openocd/bin:$PATH
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:/home/jamcshan/.deno/bin/deno

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes

# ZSH_THEME="afowler"
# ZSH_THEME="duellj"
# ZSH_THEME="kennethreitz"
# ZSH_THEME="lukerandall"
ZSH_THEME="pmcgee"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    vi-mode
    git
    colored-man-pages
    #autojump
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
source $HOME/.config/shell/aliases
# source ~/.git-completion.zsh
setxkbmap -option "caps:escape" # convert caps lock to escape # doesnt persist

# enabling autojump
[[ -s /home/asimov/.autojump/etc/profile.d/autojump.sh ]] && source /home/asimov/.autojump/etc/profile.d/autojump.sh
autoload -U compinit && compinit -u

alias luamake=/home/asimov/lua-language-server/3rd/luamake/luamake


# autoload -Uz vcs_info
# precmd() { vcs_info }
# zstyle ':vcs_info:git:*' formats '%b '
# setopt PROMPT_SUBST
#
# git_branch() {
#     git rev-parse --abbrev-ref HEAD 2> /dev/null
# }
#
# git_upstream_pos() {
#     local commit_count=$(git rev-list --count --left-right @{upstream}...HEAD 2> /dev/null)
#     if [ -n "$commit_count" ]; then
#         local behind_count=$(echo -n "$commit_count" | cut -f1)
#         local ahead_count=$(echo -n "$commit_count" | cut -f2)
#         if [ "$behind_count" != "0" ]; then
#             echo -n " ${behind_count}↑"
#         fi
#         if [ "$ahead_count" != "0" ]; then
#             echo -n " ${ahead_count}↑"
#         fi
#     fi
# }
#
#
# git_status_symbols() {
#     local gitstatus=$(git status --porcelain 2> /dev/null)
#     if [ -n "$gitstatus" ]; then
#         local status_string="";
#         if [ -n "$(echo "$gitstatus" | grep '^[^? ]')" ]; then
#             status_string="$status_string$GREEN+$BLANK"
#         fi
#         if [ -n "$(echo "$gitstatus" | grep '^.[^? ]')" ]; then
#             status_string="$status_string$RED*$BLANK"
#         fi
#         if [ -n "$(echo "$gitstatus" | grep '^[?][?]')" ]; then
#             status_string="$status_string?"
#         fi
#         echo -e " $status_string"
#     fi
# }
#
# RED='%F{red}'
# GREEN='%F{green}'
# BLANK='%f'
#
#
# git_prompt() {
#     local branch_name=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
#     if [ -n "$branch_name" ]; then
#         echo -e "${branch_name}$(git_status_symbols)$(git_upstream_pos)"
#     fi
# }
#
# # PROMPT="${PROMPT//\%!/${vcs_info_msg_0_}}"
# PROMPT="${PROMPT//\%!/$(git_prompt)}"
# PROMPT="${PROMPT//\%n/%*}"
# PROMPT="${PROMPT//@/}"
# PROMPT="${PROMPT//\%m/}"
# RPROMPT=""

if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
    exec tmux
fi
